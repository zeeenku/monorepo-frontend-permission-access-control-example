/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as AdminProgressReportRouteImport } from './routes/admin/progress-report'
import { Route as AdminLessonsRouteImport } from './routes/admin/lessons'
import { Route as AdminCoursesRouteImport } from './routes/admin/courses'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProgressReportRoute = AdminProgressReportRouteImport.update({
  id: '/admin/progress-report',
  path: '/admin/progress-report',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLessonsRoute = AdminLessonsRouteImport.update({
  id: '/admin/lessons',
  path: '/admin/lessons',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoursesRoute = AdminCoursesRouteImport.update({
  id: '/admin/courses',
  path: '/admin/courses',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/courses': typeof AdminCoursesRoute
  '/admin/lessons': typeof AdminLessonsRoute
  '/admin/progress-report': typeof AdminProgressReportRoute
  '/admin/settings': typeof AdminSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/courses': typeof AdminCoursesRoute
  '/admin/lessons': typeof AdminLessonsRoute
  '/admin/progress-report': typeof AdminProgressReportRoute
  '/admin/settings': typeof AdminSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/courses': typeof AdminCoursesRoute
  '/admin/lessons': typeof AdminLessonsRoute
  '/admin/progress-report': typeof AdminProgressReportRoute
  '/admin/settings': typeof AdminSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/courses'
    | '/admin/lessons'
    | '/admin/progress-report'
    | '/admin/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/courses'
    | '/admin/lessons'
    | '/admin/progress-report'
    | '/admin/settings'
  id:
    | '__root__'
    | '/'
    | '/admin/courses'
    | '/admin/lessons'
    | '/admin/progress-report'
    | '/admin/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminCoursesRoute: typeof AdminCoursesRoute
  AdminLessonsRoute: typeof AdminLessonsRoute
  AdminProgressReportRoute: typeof AdminProgressReportRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/progress-report': {
      id: '/admin/progress-report'
      path: '/admin/progress-report'
      fullPath: '/admin/progress-report'
      preLoaderRoute: typeof AdminProgressReportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/lessons': {
      id: '/admin/lessons'
      path: '/admin/lessons'
      fullPath: '/admin/lessons'
      preLoaderRoute: typeof AdminLessonsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/courses': {
      id: '/admin/courses'
      path: '/admin/courses'
      fullPath: '/admin/courses'
      preLoaderRoute: typeof AdminCoursesRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminCoursesRoute: AdminCoursesRoute,
  AdminLessonsRoute: AdminLessonsRoute,
  AdminProgressReportRoute: AdminProgressReportRoute,
  AdminSettingsRoute: AdminSettingsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
